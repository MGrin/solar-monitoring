version: "3.2"

services:
  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./elasticsearch/config/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      discovery.type: single-node

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./logstash/config/logstash.yml
        target: /usr/share/logstash/config/logstash.yml
        read_only: true
      - type: bind
        source: ./logstash/config/pipelines.yml
        target: /usr/share/logstash/config/pipelines.yml
        read_only: true
      - type: bind
        source: ./logstash/pipeline
        target: /usr/share/logstash/pipeline
        read_only: true
    ports:
      - "5044:5044" # logstash beats
      - "5045:5045" # solar-metrics beats
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: 7.10.1
    volumes:
      - type: bind
        source: ./kibana/config/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  apm-server:
    build:
      context: extensions/apm-server/
      args:
        ELK_VERSION: 7.10.1
    command:
      # Disable strict permission checking on 'apm-server.yml' configuration file
      # https://www.elastic.co/guide/en/beats/libbeat/current/config-file-permissions.html
      - --strict.perms=false
    volumes:
      - type: bind
        source: ./extensions/apm-server/config/apm-server.yml
        target: /usr/share/apm-server/apm-server.yml
        read_only: true
    ports:
      - "8200:8200"
    depends_on:
      - elasticsearch

  rpi-instance:
    build:
      context: rpi-instance/
      args:
        CLIENT_ID: local-client
        INSTALLATION_ID: local-installation
    env_file: ./rpi-instance/.env
    depends_on:
      - logstash
      - kibana
      - metrics-server

  metrics-server:
    build:
      context: metrics-server/
      args:
        PORT: 3000
    env_file: ./metrics-server/.env
    environment:
      PORT: 3000
    ports:
      - "3000:3000"
      - "3002:3002"
    depends_on:
      - redis
      # - apm-server

  redis-sentinel:
    image: docker.io/bitnami/redis-sentinel:6.0-debian-10
    ports:
      - "26379:26379"
    environment:
      - REDIS_MASTER_PASSWORD=redis_password
      - REDIS_SENTINEL_PASSWORD=redis_password

  redis:
    image: docker.io/bitnami/redis:6.0-debian-10
    environment:
      - REDIS_PASSWORD=redis_password

  # mongo:
  #   image: mongo:latest
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: mongo
  #     MONGO_INITDB_ROOT_PASSWORD: mongo_password
  #   ports:
  #     - 27017:27017

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   ports:
  #     - 8081:8081
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: mongo_password
